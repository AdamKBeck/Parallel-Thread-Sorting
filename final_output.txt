gcc -o ParallelSorting ParallelSorting.c -lpthread -lrt -std=c99
Finished! 
Array size 20 with 2 threads and choice 0 took 0.000000 secondsFinished! 
Array size 20 with 2 threads and choice 1 took 0.000000 secondsFinished! 
Array size 20 with 2 threads and choice 2 took 0.000000 secondsFinished! 
Array size 20 with 4 threads and choice 0 took 0.000000 secondsFinished! 
Array size 20 with 4 threads and choice 1 took 0.000000 secondsFinished! 
Array size 20 with 4 threads and choice 2 took 0.000000 secondsFinished! 
Array size 20 with 8 threads and choice 0 took 0.000000 secondsFinished! 
Array size 20 with 8 threads and choice 1 took 0.000000 secondsFinished! 
Array size 20 with 8 threads and choice 2 took 0.000000 secondsFinished! 
Array size 20 with 16 threads and choice 0 took 0.000000 secondsFinished! 
Array size 20 with 16 threads and choice 1 took 0.000000 secondsFinished! 
Array size 20 with 16 threads and choice 2 took 0.000000 secondsFinished! 
Array size 200 with 2 threads and choice 0 took 0.000000 secondsFinished! 
Array size 200 with 2 threads and choice 1 took 0.000000 secondsFinished! 
Array size 200 with 2 threads and choice 2 took 0.000000 secondsFinished! 
Array size 200 with 4 threads and choice 0 took 0.000000 secondsFinished! 
Array size 200 with 4 threads and choice 1 took 0.000000 secondsFinished! 
Array size 200 with 4 threads and choice 2 took 0.000000 secondsFinished! 
Array size 200 with 8 threads and choice 0 took 0.000000 secondsFinished! 
Array size 200 with 8 threads and choice 1 took 0.000000 secondsFinished! 
Array size 200 with 8 threads and choice 2 took 0.000000 secondsFinished! 
Array size 200 with 16 threads and choice 0 took 0.000000 secondsFinished! 
Array size 200 with 16 threads and choice 1 took 0.000000 secondsFinished! 
Array size 200 with 16 threads and choice 2 took 0.000000 secondsFinished! 
Array size 500 with 2 threads and choice 0 took 0.000000 secondsFinished! 
Array size 500 with 2 threads and choice 1 took 0.010000 secondsFinished! 
Array size 500 with 2 threads and choice 2 took 0.000000 secondsFinished! 
Array size 500 with 4 threads and choice 0 took 0.000000 secondsFinished! 
Array size 500 with 4 threads and choice 1 took 0.000000 secondsFinished! 
Array size 500 with 4 threads and choice 2 took 0.000000 secondsFinished! 
Array size 500 with 8 threads and choice 0 took 0.000000 secondsFinished! 
Array size 500 with 8 threads and choice 1 took 0.000000 secondsFinished! 
Array size 500 with 8 threads and choice 2 took 0.000000 secondsFinished! 
Array size 500 with 16 threads and choice 0 took 0.000000 secondsFinished! 
Array size 500 with 16 threads and choice 1 took 0.000000 secondsFinished! 
Array size 500 with 16 threads and choice 2 took 0.000000 secondsFinished! 
Array size 2500 with 2 threads and choice 0 took 0.000000 secondsFinished! 
Array size 2500 with 2 threads and choice 1 took 0.000000 secondsFinished! 
Array size 2500 with 2 threads and choice 2 took 0.010000 secondsFinished! 
Array size 2500 with 4 threads and choice 0 took 0.000000 secondsFinished! 
Array size 2500 with 4 threads and choice 1 took 0.000000 secondsFinished! 
Array size 2500 with 4 threads and choice 2 took 0.010000 secondsFinished! 
Array size 2500 with 8 threads and choice 0 took 0.000000 secondsFinished! 
Array size 2500 with 8 threads and choice 1 took 0.000000 secondsFinished! 
Array size 2500 with 8 threads and choice 2 took 0.000000 secondsFinished! 
Array size 2500 with 16 threads and choice 0 took 0.000000 secondsFinished! 
Array size 2500 with 16 threads and choice 1 took 0.000000 secondsFinished! 
Array size 2500 with 16 threads and choice 2 took 0.010000 secondsFinished! 
Array size 10000 with 2 threads and choice 0 took 0.000000 secondsFinished! 
Array size 10000 with 2 threads and choice 1 took 0.060000 secondsFinished! 
Array size 10000 with 2 threads and choice 2 took 0.130000 secondsFinished! 
Array size 10000 with 4 threads and choice 0 took 0.000000 secondsFinished! 
Array size 10000 with 4 threads and choice 1 took 0.030000 secondsFinished! 
Array size 10000 with 4 threads and choice 2 took 0.070000 secondsFinished! 
Array size 10000 with 8 threads and choice 0 took 0.000000 secondsFinished! 
Array size 10000 with 8 threads and choice 1 took 0.020000 secondsFinished! 
Array size 10000 with 8 threads and choice 2 took 0.030000 secondsFinished! 
Array size 10000 with 16 threads and choice 0 took 0.000000 secondsFinished! 
Array size 10000 with 16 threads and choice 1 took 0.020000 secondsFinished! 
Array size 10000 with 16 threads and choice 2 took 0.020000 seconds
